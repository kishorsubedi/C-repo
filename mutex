#include <stdio.h>
#include <unistd.h>
#include <pthread.h>

int counter = 0;
pthread_mutex_t mutex;


void *incrementCounter() {
    pthread_mutex_lock(&mutex);
    counter++;
    printf("Counter: %d\n", counter);
    pthread_mutex_unlock(&mutex);
}

int main(int argc, char **argv) {
    // create n threads
    int n =  1000;
    
    // pointers for individual threads
    pthread_t threads[n];
    
    // initialise the mutex
    pthread_mutex_init(&mutex, NULL);
    
    for (int i = 0; i < n; i++) {
        // thread function should increment counter by 1
        pthread_create(&threads[i], NULL, incrementCounter, NULL);
    }
    
    for (int i = 0; i < n; i++) {
        // collect threads
        pthread_join(threads[i], NULL);
    }
    
    // add mutex around the critical section (incrementing the counter)
    // man pthread_mutex_init
    // man pthread_mutex_destroy
    // man pthread_mutex_lock
    // man pthread_mutex_unlock
    pthread_mutex_destroy(&mutex);
    
    
    return 0;
}
